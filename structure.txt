automated-hematology-system/
├─ src/
│  └─ ahs/                        # (AHS = Automated Hematology System)
│     ├─ __init__.py
│     ├─ training/               # logic train, eval, test tách module
│     │  ├─ train.py             # tách "entry" ra scripts/, file này chỉ chứa hàm
│     │  ├─ evaluate.py
│     │  └─ infer.py
│     ├─ data/                   # dataset + datamodule
│     │  ├─ bccd_dataset.py      # << move file của bạn vào đây
│     │  └─ parsing.py           # parse xml, utils liên quan dữ liệu
│     ├─ models/
│     │  ├─ __init__.py
│     │  └─ faster_rcnn.py       # << move model.py vào đây (đổi tên rõ nghĩa)
│     ├─ transforms/
│     │  └─ transforms_albu.py   # << move vào đây
│     ├─ utils/
│     │  ├─ load_config.py       # << move vào đây
│     │  ├─ visualize_img.py     # << move vào đây
│     │  ├─ metrics.py
│     │  └─ seed.py
│     └─ cli/                    # các entry CLI mỏng để import từ training/*
│        ├─ train_cli.py         # parse args -> gọi ahs.training.train:main
│        ├─ eval_cli.py
│        └─ infer_cli.py
│
├─ configs/
│  ├─ config.yaml                # << move file của bạn vào đây
│  ├─ data.yaml                  # root, split…
│  ├─ model.yaml                 # backbone, num_classes…
│  ├─ train.yaml                 # epochs, batch_size, lr…
│  └─ infer.yaml                 # score_thresh, ckpt_path…
│
├─ experiments/                  # logs nhẹ, tóm tắt; nặng (mlruns) dùng artifact store
│  └─ README.md
│
├─ notebooks/
│  └─ eda_bccd.ipynb
│
├─ scripts/                      # shell/python tiện ích (entry chạy trong docker/CI)
│  ├─ train.sh                   # gọi python -m ahs.cli.train_cli ...
│  ├─ evaluate.sh
│  ├─ infer.sh
│  ├─ export_onnx.sh
│  ├─ sync_mlruns.sh             # rsync / s3 sync artifact
│  └─ kaggle_download_mlruns.py  # nếu cần auto-download sau train
│
├─ docker/
│  ├─ Dockerfile                 # image huấn luyện/suy luận
│  ├─ docker-compose.yml         # MLflow + MinIO + training service (dev)
│  └─ entrypoint.sh
│
├─ infra/
│  ├─ k8s/                       # manifests k8s (dev/prod)
│  │  ├─ namespaces.yaml
│  │  ├─ mlflow/
│  │  │  ├─ deployment.yaml
│  │  │  ├─ service.yaml
│  │  │  └─ pvc.yaml
│  │  ├─ minio/
│  │  │  ├─ statefulset.yaml
│  │  │  ├─ service.yaml
│  │  │  └─ pvc.yaml
│  │  ├─ training-job.yaml       # Job/CronJob khởi chạy scripts/train.sh
│  │  ├─ inference-deploy.yaml   # Deployment cho REST gRPC inference
│  │  └─ ingress.yaml
│  ├─ helm/                      # (tuỳ chọn) chart hoá mlflow/minio/ahs
│  └─ terraform/                 # (tuỳ chọn) GKE, GCS bucket, SA, IAM
│
├─ ci/
│  ├─ Jenkinsfile                # pipeline CI/CD
│  └─ pre-commit-config.yaml
│
├─ tests/
│  ├─ unit/
│  │  ├─ test_transforms.py
│  │  ├─ test_dataset.py
│  │  └─ test_model_forward.py
│  └─ smoke/
│     └─ test_training_smoke.py  # 1-2 batch để bắt lỗi sớm
│
├─ .env.example                  # biến môi trường (MLFLOW_*, MINIO_*, DB_*)
├─ .gitignore
├─ Makefile                      # targets: setup, lint, test, build, train, deploy
├─ pyproject.toml                # packaging + deps (PEP 621) hoặc requirements.txt
├─ requirements.txt              # nếu chưa dùng pyproject
├─ README.md
└─ LICENSE
